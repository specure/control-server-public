package com.specure.request.mobile;

import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.specure.common.enums.MeasurementServerType;
import com.specure.request.core.measurement.request.GeoLocationRequest;
import com.specure.request.core.measurement.request.PingRequest;
import com.specure.request.core.measurement.request.RadioInfoRequest;
import com.specure.request.core.measurement.request.SpeedDetailRequest;
import io.swagger.annotations.ApiModelProperty;
import lombok.Builder;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.ToString;

import java.util.List;

@Builder
@Getter
@EqualsAndHashCode
@ToString
public class MeasurementResultMobileRequest {

    @ApiModelProperty(notes = "Platform of device", example = "Android")
    @JsonProperty(value = "plattform")
    @JsonAlias({"plattform", "platform"})
    private final String platform;

    @ApiModelProperty(notes = "Client name", example = "RMBT")
    @JsonProperty(value = "client_name")
    private final MeasurementServerType clientName;

    @ApiModelProperty(notes = "Client version", example = "1.2.1")
    @JsonProperty(value = "client_version")
    private final String clientVersion;

    @ApiModelProperty(notes = "Language code of the current locale (ISO 639)")
    @JsonProperty(value = "client_language")
    private final String clientLanguage;

    @ApiModelProperty(notes = "Time of the test in millis")
    @JsonProperty(value = "time")
    private final Long time;

    @ApiModelProperty(notes = " Test token generated by control server", example = "8628925b-eda5-4500-9bbc-365f592470ce_1614328561_Dggllgjl/4zMNl97cNab2wgUb8k=")
    @JsonProperty(value = "test_token")
    private final String testToken;

    @ApiModelProperty(notes = " Bytes downloaded during download phase")
    @JsonProperty(value = "test_bytes_download")
    private final Long testBytesDownload;

    @ApiModelProperty(notes = "Bytes uploaded during upload phase")
    @JsonProperty(value = "test_bytes_upload")
    private final Long testBytesUpload;

    @ApiModelProperty(notes = "Duration of the download phase in nanoseconds")
    @JsonProperty(value = "test_nsec_download")
    private final Long downloadDurationNanos;

    @ApiModelProperty(notes = "Duration of the upload phase in nanoseconds")
    @JsonProperty(value = "test_nsec_upload")
    private final Long uploadDurationNanos;

    @ApiModelProperty(notes = "Number of threads used during the measurement")
    @JsonProperty(value = "test_num_threads")
    private final Integer testNumThreads;

    @ApiModelProperty(notes = "Download speed in kbs", example = "7170")
    @JsonProperty(value = "test_speed_download")
    private final Integer downloadSpeed;

    @ApiModelProperty(notes = "Upload speed in kbs", example = "15061")
    @JsonProperty(value = "test_speed_upload")
    private final Integer uploadSpeed;

    @ApiModelProperty(notes = "Shortest ping in nanos", example = "29783021")
    @JsonProperty(value = "test_ping_shortest")
    private final Long pingShortest;

    @ApiModelProperty(notes = "Product")
    @JsonProperty(value = "product")
    private final String product;

    @ApiModelProperty(notes = "Device")
    @JsonProperty(value = "device")
    private final String device;

    @ApiModelProperty(notes = "Model")
    @JsonProperty(value = "model")
    private final String model;

    @ApiModelProperty(notes = "Server id for the network")
    @JsonProperty(value = "network_type")
    private final Integer networkType;

    @ApiModelProperty(notes = "GeoLocation array")
    @JsonProperty(value = "geoLocations")
    @ToString.Exclude
    private final List<GeoLocationRequest> geoLocations;

    @ApiModelProperty(notes = "Pings array")
    @JsonProperty(value = "pings")
    @ToString.Exclude
    private final List<PingRequest> pings;

    @ApiModelProperty(notes = "RadioInfo array")
    @JsonProperty(value = "radioInfo")
    private final RadioInfoRequest radioInfo;

    @ApiModelProperty(notes = "Speed details array")
    @JsonProperty(value = "speed_detail")
    @ToString.Exclude
    private final List<SpeedDetailRequest> speedDetails;

    @ApiModelProperty(notes = "The mcc_mnc reported by the sim card", example = "231-06")
    @JsonProperty(value = "telephony_network_sim_operator")
    @JsonAlias({"telephony_network_sim_operator", "telephonyNetworkSimOperator", "sim_mcc_mnc"})
    private final String simMccMnc;

    @ApiModelProperty(notes = "The country reported by the sim")
    @JsonProperty(value = "telephony_network_sim_country")
    @JsonAlias({"telephony_network_sim_country", "telephonyNetworkSimCountry", "sim_country"})
    private final String simCountry;

    @ApiModelProperty(notes = "The name of the operator providing the sim card")
    @JsonProperty(value = "telephony_network_sim_operator_name")
    @JsonAlias({"telephony_network_sim_operator_name", "sim_operator_name"})
    private final String simOperatorName;

    @ApiModelProperty(notes = "mcc-mnc of the operator network, mobile networks only", example = "231-06")
    @JsonProperty(value = "telephony_network_operator")
    @JsonAlias({"telephony_network_operator", "network_mcc_mnc"})
    private final String networkMccMnc;

    @ApiModelProperty(notes = "Network is roaming")
    @JsonProperty(value = "telephony_network_is_roaming")
    @JsonAlias({"telephony_network_is_roaming", "network_is_roaming"})
    private final boolean networkIsRoaming;

    @ApiModelProperty(notes = "Name of the network operator, mobile networks only", example = "O2 - SK")
    @JsonProperty(value = "telephony_network_operator_name")
    @JsonAlias({"telephony_network_operator_name", "telephonyNetworkOperatorName", "network_operator_name"})
    private final String networkOperatorName;

    @ApiModelProperty(notes = "The country reported by the network")
    @JsonProperty(value = "telephony_network_country")
    @JsonAlias({"telephony_network_country", "network_country"})
    private final String networkCountry;

    @ApiModelProperty(notes = "Telephony sim count")
    @JsonProperty(value = "telephony_sim_count")
    @ToString.Exclude
    private final Integer telephonySimCount;

    @ApiModelProperty(notes = "Dual sim")
    @JsonProperty(value = "dual_sim")
    private final boolean dualSim;

    @ApiModelProperty(notes = "SSID of the wifi network")
    @JsonProperty(value = "wifi_ssid")
    @ToString.Exclude
    private final String wifiSSID;

    @ApiModelProperty(notes = "BSSID of the wifi network")
    @JsonProperty(value = "wifi_bssid")
    @ToString.Exclude
    private final String wifiBSSID;

    @ApiModelProperty(notes = "Reason of the test finishing, provided as int value", example = "0")
    @JsonProperty(value = "test_status")
    @ToString.Exclude
    private final String testStatus;

    @ApiModelProperty(notes = "Test tag added to each test, can be set in the developer mode settings")
    @JsonProperty(value = "tag")
    @ToString.Exclude
    private final String tag;

    @ApiModelProperty(notes = "Jitter")
    @JsonProperty(value = "voip_result_jitter_millis")
    private final String jitter;

    @ApiModelProperty(notes = "Packet loss")
    @JsonProperty(value = "voip_result_packet_loss_percents")
    private final String packetLoss;
}
